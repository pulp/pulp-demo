---
- hosts: all
  user: pulp
  become: true
  vars:
    - reboot: false
    - ansible_python_interpreter: /usr/bin/python3
  tasks:
    - name: Update all packages
      dnf:
        name: "*"
        state: latest
        update_only: true
      register: updates

    - name: reboot for updates
      reboot:
      when:
        - reboot
        - updates.changed

    # kubernetes.repo copied from here:
    # https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl-binary-using-native-package-management
    - name: Add repo for kubectl
      copy:
        src:   etc/yum.repos.d/kubernetes.repo
        dest: /etc/yum.repos.d/kubernetes.repo

    - name: Install Packages
      dnf:
        name: "{{ item }}"
      with_items:
        # minikube-prescribed
        # https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm2-driver
        - libvirt-daemon-kvm
        - qemu-kvm
        - kubectl
        # Let's be able to interact with the VMs easily:
        - virt-manager
        - libvirt-client
        # Let's make our lives easier
        - vim-enhanced
        # Preferred web client for pulp3
        - httpie
        # JSON parger. Used often in client commands like in pulp_file README.md.
        - jq
        # The pulp-operator depends on Ansible, including this
        - python3-ansible-runner

    - name: Install Python Packages
      pip:
        # Needed to interact with ansible content plugin
        name: mazer
      become: false

    - name: Generate kubectl bash completion file under /tmp
      shell: kubectl completion bash > /tmp/kubectl.sh
      changed_when: false

    - name: Install kubectl bash completion file
      copy:
        src:            /tmp/kubectl.sh
        dest: /etc/profile.d/kubectl.sh
        remote_src: true

    # https://github.com/kubernetes/minikube/blob/master/docs/drivers.md#kvm2-driver
    - name: Give the user permission to use virt-manager
      user:
        name: pulp
        groups: libvirt
        append: true

    - name: Download minikube
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: /usr/local/bin/minikube
        owner: root
        group: root
        mode: 0755
        force: yes

    - name: Install dashboard .desktop file
      copy:
        src:   usr/local/share/applications/dashboard.desktop
        dest: /usr/local/share/applications/dashboard.desktop
        owner: root
        group: root
        mode: 0644
      notify: update-desktop-database

    - name: Make dashboard.desktop be recognized ASAP hopefully
      meta: flush_handlers

    - name: Generate minikube bash completion file under /tmp
      shell: minikube completion bash > /tmp/minikube.sh
      changed_when: false

    - name: Install minikube bash completion file
      copy:
        src:            /tmp/minikube.sh
        dest: /etc/profile.d/minikube.sh
        remote_src: true

    - name: Download minikube kvm2 driver
      get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2
        dest: /usr/local/bin/docker-machine-driver-kvm2
        owner: root
        group: root
        mode: 0755
        force: yes

    - name: Configure minikube to use kvm2 for user
      command: minikube config set vm-driver kvm2
      become: false

    # This cannot be changed after the VM is created
    # It is not pre-allocated though.
    #
    # Even though the VM sees it as 512.2G, the filesystem is still only 448G.
    # This should be good enough for demo purposes.
    - name: Configure minikube to expand the disk at creation to 550g
      command: minikube config set disk-size 550g
      become: false

    - name: Check if minikube has already been setup and is working fine
      command: minikube status
      become: false
      register: kubestatus
      failed_when: false
      changed_when: false

    - name: Start minikube
      # Keep these options in sync with the values in files/etc/systemd/system/minikube.service
      command: minikube start --mount --memory 26624 --cpus 4 --extra-config=apiserver.service-node-port-range=80-32767
      become: false
      register: startout
      when: kubestatus.rc != 0
      changed_when: "'Done! Thank you for using minikube!' in startout.stdout"

    - name: Install a service so minikube starts at boot
      copy:
        src:   etc/systemd/system/minikube.service
        dest: /etc/systemd/system/minikube.service

    - name: Enable minikube service
      systemd:
        name: minikube
        enabled: true
        daemon_reload: true

    # for default user & pass for httpie
    - name: Install .netrc file
      copy:
        src:   home/pulp/.netrc
        dest: /home/pulp/.netrc
        # ansible-galaxy requires this
        mode: 0600
      become: false

    - name: Configure gnome-desktop
      copy:
        src:   "etc/dconf/db/local.d/{{ item }}"
        dest: "/etc/dconf/db/local.d/{{ item }}"
        owner: root
        group: root
        mode: 0644
      notify: generate system dconf database
      with_items:
        # Make the dashboard a favorite app along with the terminal
        - 00-favorite-apps
        # Disable the screensaver, and therefore automatic screen lock
        - 00-disable-screensaver

  handlers:
    - name: update-desktop-database
      command: update-desktop-database

    - name: generate system dconf database
      command: dconf update
